<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.six2six.outside.dal.product.dao.ProductDAO">
    <resultMap type="cn.six2six.outside.dal.product.mapping.Product" id="BaseResultMap">
        <result column="id" property="id"/>
        <result column="store_id" property="storeId"/>
        <result column="user_id" property="userId"/>
        <result column="product_id" property="productId"/>
        <result column="item_name" property="itemName"/>
        <result column="item_short_name" property="itemShortName"/>
        <result column="unit" property="unit"/>
        <result column="status" property="status"/>
        <result column="is_valid" property="valid"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>


    <!-- 表基础字段 -->
    <sql id="Base_Column_List">
        id,
        store_id,
        user_id,
        product_id,
        item_name,
        item_short_name,
        unit,
        status,
        is_valid,
        create_time,
        update_time
    </sql>

    <select id="selectAll" resultMap="BaseResultMap">
      select   id,
        store_id,
        user_id,
        product_id,
        item_name,
        item_short_name,
        unit,
        status,
        is_valid,
        create_time,
        update_time
      from tb_product
    </select>

    <select id="selectOne" parameterType="java.lang.String" resultMap="BaseResultMap">
      select   id,
        store_id,
        user_id,
        product_id,
        item_name,
        item_short_name,
        unit,
        status,
        is_valid,
        create_time,
        update_time
      from tb_product
      where product_id = #{productId}
    </select>

    <delete id="deleteById" parameterType="java.lang.String">
        delete
        from tb_product
        where product_id = #{productId}
    </delete>

    <update id="updateById">
        update tb_product set
        product_id = #{productId}
        <if test="storeId != null">
          , store_id = #{storeId}
        </if>
        <if test="userId != null">
            ,user_id = #{userId}
        </if>
        <if test="itemName != null">
            ,item_name = #{itemName}
        </if>
        <if test="itemShortName != null">
            ,item_short_name = #{itemShortName}
        </if>
        <if test="unit != null">
            ,unit = #{unit}
        </if>
        <if test="status != null">
            ,status = #{status}
        </if>
        <if test="valid != null">
            ,is_valid = #{valid}
        </if>
        <if test="createTime != null">
            ,create_time = #{createTime}
        </if>
        <if test="updateTime != null">
            ,update_time = #{updateTime}
        </if>
        where product_id = #{productId}
    </update>

    <insert id="insert" parameterType="cn.six2six.outside.dal.product.mapping.Product" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO tb_product
        (
        store_id,
        user_id,
        product_id,
        item_name,
        item_short_name,
        unit,
        status,
        is_valid,
        create_time,
        update_time
        )VALUES (
        #{storeId},
        #{userId},
        #{productId},
        #{itemName},
        #{itemShortName},
        #{unit},
        #{status},
        #{valid},
        #{createTime},
        #{updateTime}
        )
    </insert>

    <select id="selectAllDetail" resultType="cn.six2six.outside.dal.product.mapping.ProductDetail" parameterType="java.lang.String">
        SELECT
            id,
            product_id,
            product_detail_id,
            unit_price,
            price_type,
            model,
            inventory,
            remark,
            create_time,
            update_time
        FROM
            tb_product_detail
        WHERE
            product_id = #{productId}
    </select>

    <select id="selectOneDetail" resultType="cn.six2six.outside.dal.product.mapping.ProductDetail" parameterType="java.lang.String">
        SELECT
            id,
            product_id,
            product_detail_id,
            unit_price,
            price_type,
            model,
            inventory,
            remark,
            create_time,
            update_time
        FROM
            tb_product_detail
        WHERE
            product_detail_id = #{productDetailId}
    </select>

    <delete id="deleteByIdDetail" parameterType="java.lang.String">
        delete
        from tb_product_detail
        where product_detail_id = #{productDetailId}
    </delete>

    <update id="updateDetail">
        update tb_product_detail set
        <if test="unitPrice != null">
            ,unit_price = #{unitPrice}
        </if>
        <if test="priceType != null">
            ,price_type = #{priceType}
        </if>
        <if test="model != null">
            ,model = #{model}
        </if>
        <if test="inventory != null">
            ,inventory = #{inventory}
        </if>
        <if test="remark != null">
            ,remark = #{remark}
        </if>
        <if test="createTime != null">
            ,create_time = #{createTime}
        </if>
        <if test="updateTime != null">
            ,update_time = #{updateTime}
        </if>
        where product_detail_id = #{productDetailId}
    </update>

    <insert id="insertDetail" parameterType="cn.six2six.outside.dal.product.mapping.ProductDetail" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO tb_product_detail
        (
            product_id,
            product_detail_id,
            unit_price,
            price_type,
            model,
            inventory,
            remark,
            create_time,
            update_time
        )VALUES (
            #{productId},
            #{productDetailId},
            #{unitPrice},
            #{priceType},
            #{model},
            #{inventory},
            #{remark},
            #{createTime},
            #{updateTime}
        )
    </insert>
</mapper>